4batch:

5.000: 0,198
(class 1 average_precision: 0.974638, class 2 average_precision: 0.994264)
(COCO mAP 0.980
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.205
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.818
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.818)

8.000: 0,139

10.000: 0,163
(class 1 average_precision: 0.980046, class 2 average_precision: 0.997067)
(COCO mAP 0.986
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.219
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.872
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.875)

15.000: 0,105
(class 1 average_precision: 0.984963, class 2 average_precision: 0.996755)
(COCO mAP 0.986
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.223
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.892
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.893)

18.000: 0,082

20.000: 0,09
(class 1 average_precision: 0.986088, class 2 average_precision: 0.999207)
(coco: mAP@.50IOU: 0.989
Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=  1 ] = 0.226
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets= 10 ] = 0.902
 Average Recall     (AR) @[ IoU=0.50:0.95 | area=   all | maxDets=100 ] = 0.903)


 AR@1 means that it will compute the mean average recall across all images with at 
most 1 detection (i.e. 0 or 1), across all classes, and across all IOU thresholds. 
For AR@10, it would do the same, but across all images with at most 10 detections 
(i.e. 0 <= n <= 10). AR@100 is for at most 100 detections.